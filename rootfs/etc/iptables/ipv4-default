*filter

# Protocol specific input chains
:TCP-INPUT - [0:0]
:UDP-INPUT - [0:0]
:ICMP-INPUT - [0:0]

# Protocol specific output chains
:TCP-OUTPUT - [0:0]
:UDP-OUTPUT - [0:0]
:ICMP-OUTPUT - [0:0]

# Accept incoming active and loopback connections, drop invalid connections
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP

# Redirect new incoming connections to protocol specific chains
-A INPUT -p icmp -m conntrack --ctstate NEW -j ICMP-INPUT
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP-INPUT
-A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP-INPUT

# Reject unmatched incoming connections with standard control messages
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable

# Accept outgoing active and loopback connections, drop invalid connections
-A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -o lo -j ACCEPT
-A OUTPUT -m conntrack --ctstate INVALID -j DROP

# Redirect new outgoing connections to protocol specific chains
-A OUTPUT -p icmp -m conntrack --ctstate NEW -j ICMP-OUTPUT
-A OUTPUT -p udp -m conntrack --ctstate NEW -j UDP-OUTPUT
-A OUTPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP-OUTPUT

# Reject unmatched outgoing connections with standard control messages
-A OUTPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A OUTPUT -p tcp -j REJECT --reject-with tcp-reset
-A OUTPUT -j REJECT --reject-with icmp-proto-unreachable

# Accept outgoing ICMP echo requests
-A ICMP-OUTPUT -o eth+ -p icmp --icmp-type echo-request -j ACCEPT

# Accept outgoing UDP connections
-A UDP-OUTPUT -o eth+ -p udp -j ACCEPT

# Accept outgoing TCP connections
-A TCP-OUTPUT -o eth+ -p tcp -j ACCEPT

COMMIT
